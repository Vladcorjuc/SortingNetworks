package gui;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.URISyntaxException;
import java.util.Arrays;


import genetic_algorithm.composite_objective.CompositeGeneticAlgorithm;
import genetic_algorithm.hybrid.Helper;
import genetic_algorithm.hybrid.HybridGeneticAlgorithm;
import genetic_algorithm.hybrid.crossover.ICrossover;
import genetic_algorithm.hybrid.crossover.MultiPointCrossover;
import genetic_algorithm.hybrid.crossover.SinglePointCrossover;
import genetic_algorithm.hybrid.editor.CorrectWireEditor;
import genetic_algorithm.hybrid.editor.IEditor;
import genetic_algorithm.hybrid.editor.RedundancyEditor;
import genetic_algorithm.hybrid.mutation.IMutation;
import genetic_algorithm.hybrid.mutation.IndirectReplacementMutation;
import genetic_algorithm.hybrid.mutation.SimpleMutation;
import javafx.beans.binding.Bindings;
import javafx.beans.property.DoubleProperty;
import javafx.embed.swing.JFXPanel;
import javafx.scene.Scene;
import javafx.scene.layout.StackPane;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaView;
import javafx.stage.Screen;

import javax.imageio.ImageIO;
import javax.swing.*;

/**
 *
 * @author Vlad
 */
public class Gui extends javax.swing.JFrame {
    
    private final Double crossoverRates[] = new Double[]{0.01,0.03,0.05,0.07,0.1,0.15,0.20,0.30};
    private final Integer population[] = new Integer[]{100,200,300,400,500,600,700,800,900,1000};
    private final Integer generations[] = new Integer[]{100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000,10000};
    private final String crossoverProportion[] = new String[]{"10%","20%","30%","40%","50%"};
    private final Double mutationRates[] = new Double[]{0.01,0.03,0.05,0.07,0.1,0.15,0.20,0.30};
    private final String crossoverTypes[] = new String[]{"Single-Point","Multi-Point"};
    private final String mutationTypes[] = new String[]{"Simple","Indirect Replacement"};
    private final String editor[] = new String[]{"Correct Wire","Redundancy"};
    private final Integer wires[] = new Integer[]{2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
    private final Integer depth[] = new Integer[]{1,2,3,4,5,6,7,8,9,10,11,12,14};
    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
        initMenu();
        initVideo();
       
    }
    public void initVideo(){
        
        File video_source = new File("src//main//resources//video.mp4");
        Media m = new Media(video_source.toURI().toString());
        player = new MediaPlayer(m);
        MediaView viewer = new MediaView(player);

        StackPane root = new StackPane();
        Scene scene = new Scene(root);

        // center video position
        javafx.geometry.Rectangle2D screen = Screen.getPrimary().getVisualBounds();
        viewer.setX((screen.getWidth() - VideoPlayer.getWidth()) / 2);
        viewer.setY((screen.getHeight() - VideoPlayer.getHeight()) / 2);

        // resize video based on screen size
        DoubleProperty width = viewer.fitWidthProperty();
        DoubleProperty height = viewer.fitHeightProperty();
        width.bind(Bindings.selectDouble(viewer.sceneProperty(), "width"));
        height.bind(Bindings.selectDouble(viewer.sceneProperty(), "height"));
        viewer.setPreserveRatio(true);

        // add video to stackpane
        root.getChildren().add(viewer);

        VFXPanel.setScene(scene);
        //player.play();
        VideoPlayer.setLayout(new BorderLayout());
        VideoPlayer.add(VFXPanel, BorderLayout.CENTER);
    }
    public void initMenu(){
        Menu.setVisible(true);
        Menu.setEnabled(true);
        
        
        Tutorial1.setVisible(false);
        Tutorial1.setEnabled(false);
        
   
        Tutorial2.setVisible(false);
        Tutorial2.setEnabled(false);
        
        Try_Algorithm.setVisible(false);
        Try_Algorithm.setEnabled(false);
        
        
        Show.setVisible(false);
        Show.setEnabled(false);
        
        Hybrid.setVisible(false);
        Hybrid.setVisible(false);
        
        Cmo.setVisible(false);
        Cmo.setVisible(false);
        
        
    }
    
    public static double fromPercentageString(String value){
        return Double.parseDouble(value.replace("%","")) / 100;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        Menu = new javax.swing.JPanel();
        tutorial = new javax.swing.JLabel();
        found = new javax.swing.JLabel();
        try_algorithm = new javax.swing.JLabel();
        credits = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Tutorial1 = new javax.swing.JPanel();
        NextTutorial = new javax.swing.JLabel();
        BackToMenu = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Tutorial2 = new javax.swing.JPanel();
        BackToTutorial = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        VideoPlayer = new javax.swing.JPanel();
        Try_Algorithm = new javax.swing.JPanel();
        ComputeAlgorithm = new javax.swing.JLabel();
        BackToMenuFromAlgorithm = new javax.swing.JLabel();
        to_hibrid = new javax.swing.JLabel();
        to_cmo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Show = new javax.swing.JPanel();
        ComputeShow = new javax.swing.JLabel();
        BackToMenuFromShow = new javax.swing.JLabel();
        ShowPanel = new javax.swing.JPanel();
        showN = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(wires)));
        jLabel5 = new javax.swing.JLabel();
        Hybrid = new javax.swing.JPanel();
        BackToSelectFromHibrid = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        crossoverHybrid = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(crossoverTypes)));
        populationHybrid = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(population)));
        generationsHybrid = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(generations)));
        mutationHybrid = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(mutationRates)));
        editorType = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(editor)));
        mutationType = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(mutationTypes)));
        helper = new javax.swing.JRadioButton();
        computeHybrid = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        fireHybrid = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(wires)));
        depthHybrid = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(depth)));
        jScrollPane1 = new javax.swing.JScrollPane();
        textHibrid = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        Cmo = new javax.swing.JPanel();
        BackToSelectFromCmo = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        crossoverRateCMO = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(crossoverRates)));
        populationCMO = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(population)));
        generationsCMO = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(generations)));
        crossoverProportionCMO = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(crossoverProportion)));
        mutationCMO = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(mutationRates)));
        computeCMO = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        wiresCMO = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(wires)));
        jLabel23 = new javax.swing.JLabel();
        depthCMO = new javax.swing.JSpinner(new SpinnerListModel(Arrays.asList(depth)));
        jScrollPane2 = new javax.swing.JScrollPane();
        textCmo = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        Credits = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sorting Networks");
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(1040, 815));
        setPreferredSize(new java.awt.Dimension(1040, 815));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Menu.setBackground(new java.awt.Color(255, 255, 255));
        Menu.setMinimumSize(new java.awt.Dimension(1024, 768));
        Menu.setPreferredSize(new java.awt.Dimension(1024, 768));
        Menu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tutorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tutorialMouseClicked(evt);
            }
        });
        Menu.add(tutorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 490, 60));

        found.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foundMouseClicked(evt);
            }
        });
        Menu.add(found, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 280, 500, 70));

        try_algorithm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try_algorithmMouseClicked(evt);
            }
        });
        Menu.add(try_algorithm, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 390, 500, 70));

        credits.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                creditsMouseClicked(evt);
            }
        });
        Menu.add(credits, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 510, 510, 60));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Home.png"))); // NOI18N
        Menu.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));

        getContentPane().add(Menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));

        Tutorial1.setBackground(new java.awt.Color(255, 255, 255));
        Tutorial1.setMinimumSize(new java.awt.Dimension(1024, 768));
        Tutorial1.setPreferredSize(new java.awt.Dimension(1024, 768));
        Tutorial1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        NextTutorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NextTutorialMouseClicked(evt);
            }
        });
        Tutorial1.add(NextTutorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 630, 150, 50));

        BackToMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackToMenuMouseClicked(evt);
            }
        });
        Tutorial1.add(BackToMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 700, 130, 50));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tutorial.png"))); // NOI18N
        Tutorial1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));

        getContentPane().add(Tutorial1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        Tutorial2.setBackground(new java.awt.Color(255, 255, 255));
        Tutorial2.setMinimumSize(new java.awt.Dimension(1024, 768));
        Tutorial2.setPreferredSize(new java.awt.Dimension(1024, 768));
        Tutorial2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BackToTutorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackToTutorialMouseClicked(evt);
            }
        });
        Tutorial2.add(BackToTutorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 720, 140, 40));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tutorial-2.png"))); // NOI18N
        Tutorial2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1030, 770));

        javax.swing.GroupLayout VideoPlayerLayout = new javax.swing.GroupLayout(VideoPlayer);
        VideoPlayer.setLayout(VideoPlayerLayout);
        VideoPlayerLayout.setHorizontalGroup(
            VideoPlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 930, Short.MAX_VALUE)
        );
        VideoPlayerLayout.setVerticalGroup(
            VideoPlayerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );

        Tutorial2.add(VideoPlayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 930, 460));

        getContentPane().add(Tutorial2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));

        Try_Algorithm.setBackground(new java.awt.Color(255, 255, 255));
        Try_Algorithm.setMinimumSize(new java.awt.Dimension(1024, 768));
        Try_Algorithm.setPreferredSize(new java.awt.Dimension(1024, 768));
        Try_Algorithm.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ComputeAlgorithm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComputeAlgorithmMouseClicked(evt);
            }
        });
        Try_Algorithm.add(ComputeAlgorithm, new org.netbeans.lib.awtextra.AbsoluteConstraints(681, 126, 90, 40));

        BackToMenuFromAlgorithm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackToMenuFromAlgorithmMouseClicked(evt);
            }
        });
        Try_Algorithm.add(BackToMenuFromAlgorithm, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 680, 150, 50));

        to_hibrid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                to_hibridMouseClicked(evt);
            }
        });
        Try_Algorithm.add(to_hibrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, 540, 90));
        to_hibrid.getAccessibleContext().setAccessibleName("hibrid");

        to_cmo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                to_cmoMouseClicked(evt);
            }
        });
        Try_Algorithm.add(to_cmo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 360, 560, 90));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Select the algorithm.png"))); // NOI18N
        jLabel4.setText("aaaaaaaasddddddddddddddddddddddddddddddddddd");
        Try_Algorithm.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 770));

        getContentPane().add(Try_Algorithm, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));

        Show.setBackground(new java.awt.Color(255, 255, 255));
        Show.setMinimumSize(new java.awt.Dimension(1024, 768));
        Show.setPreferredSize(new java.awt.Dimension(1024, 768));
        Show.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ComputeShow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComputeShowMouseClicked(evt);
            }
        });
        Show.add(ComputeShow, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 110, 140, 60));

        BackToMenuFromShow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackToMenuFromShowMouseClicked(evt);
            }
        });
        Show.add(BackToMenuFromShow, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 690, 130, 50));

        ShowPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout ShowPanelLayout = new javax.swing.GroupLayout(ShowPanel);
        ShowPanel.setLayout(ShowPanelLayout);
        ShowPanelLayout.setHorizontalGroup(
            ShowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );
        ShowPanelLayout.setVerticalGroup(
            ShowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );

        Show.add(ShowPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 720, 460));

        showN.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        Show.add(showN, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 110, 90, 40));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Show.png"))); // NOI18N
        Show.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 770));

        getContentPane().add(Show, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));

        Hybrid.setBackground(new java.awt.Color(255, 255, 255));
        Hybrid.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BackToSelectFromHibrid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackToSelectFromHibridMouseClicked(evt);
            }
        });
        Hybrid.add(BackToSelectFromHibrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 700, 140, 50));

        jLabel14.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel14.setText("Tip de Crossover");
        jLabel14.setToolTipText("");
        Hybrid.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 130, 110, 20));

        jLabel16.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel16.setText("Dimensiunea populației ");
        Hybrid.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 160, -1));

        jLabel17.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel17.setText("Numărul de generații");
        Hybrid.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 140, 20));

        jLabel18.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel18.setText("Rata de mutație");
        Hybrid.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 130, -1, -1));

        jLabel19.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel19.setText("Editor");
        Hybrid.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 200, -1, -1));

        jLabel15.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel15.setText("Tip de mutație");
        Hybrid.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 110, 20));

        crossoverHybrid.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        crossoverHybrid.setInheritsPopupMenu(true);
        crossoverHybrid.setRequestFocusEnabled(false);
        Hybrid.add(crossoverHybrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 120, 110, 30));

        populationHybrid.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Hybrid.add(populationHybrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 60, 30));

        generationsHybrid.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Hybrid.add(generationsHybrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 120, 70, 30));

        mutationHybrid.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Hybrid.add(mutationHybrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 120, 60, 30));

        editorType.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Hybrid.add(editorType, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 190, 160, 30));

        mutationType.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Hybrid.add(mutationType, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 170, 30));

        helper.setBackground(new java.awt.Color(255, 255, 255));
        helper.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        helper.setText("Helper");
        helper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helperActionPerformed(evt);
            }
        });
        Hybrid.add(helper, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 190, 110, 20));

        computeHybrid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computeHybridMouseClicked(evt);
            }
        });
        Hybrid.add(computeHybrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 160, 130, 70));

        jLabel20.setText("Fire");
        Hybrid.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 30, -1));

        jLabel21.setText("Adâncime");
        Hybrid.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, -1, -1));

        fireHybrid.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        Hybrid.add(fireHybrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 60, 30));

        depthHybrid.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        Hybrid.add(depthHybrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, 60, 30));

        textHibrid.setColumns(20);
        textHibrid.setRows(5);
        jScrollPane1.setViewportView(textHibrid);

        Hybrid.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 266, 950, 420));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Hibrid.png"))); // NOI18N
        jLabel7.setText("aaaaaaaasddddddddddddddddddddddddddddddddddd");
        Hybrid.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -10, 1024, 768));

        getContentPane().add(Hybrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));

        Cmo.setBackground(new java.awt.Color(255, 255, 255));
        Cmo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BackToSelectFromCmo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackToSelectFromCmoMouseClicked(evt);
            }
        });
        Cmo.add(BackToSelectFromCmo, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 690, 130, 50));

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel9.setText("Rata de Crossover");
        jLabel9.setToolTipText("");
        Cmo.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 190, 130, 20));

        jLabel10.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel10.setText("Numărul de generații");
        Cmo.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 120, 190, 20));

        jLabel11.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel11.setText("Dimensiunea populației ");
        Cmo.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 120, -1, 20));

        jLabel12.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel12.setText("Proporție de Crossover");
        Cmo.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, -1, -1));

        jLabel13.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel13.setText("Rata de mutație");
        Cmo.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 190, -1, -1));

        crossoverRateCMO.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        crossoverRateCMO.setInheritsPopupMenu(true);
        crossoverRateCMO.setRequestFocusEnabled(false);
        Cmo.add(crossoverRateCMO, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 180, 60, 30));

        populationCMO.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Cmo.add(populationCMO, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 110, 60, 30));

        generationsCMO.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Cmo.add(generationsCMO, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 110, 80, 30));

        crossoverProportionCMO.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Cmo.add(crossoverProportionCMO, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, 60, 30));

        mutationCMO.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Cmo.add(mutationCMO, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 180, 60, 30));

        computeCMO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                computeCMOMouseClicked(evt);
            }
        });
        Cmo.add(computeCMO, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 170, 130, 60));

        jLabel22.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel22.setText("Fire");
        Cmo.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, -1, -1));

        wiresCMO.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Cmo.add(wiresCMO, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 60, 30));

        jLabel23.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel23.setText("Adâncime");
        Cmo.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, -1, -1));

        depthCMO.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Cmo.add(depthCMO, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 60, 30));

        textCmo.setColumns(20);
        textCmo.setRows(5);
        jScrollPane2.setViewportView(textCmo);

        Cmo.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 256, 930, 430));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CMO.png"))); // NOI18N
        jLabel8.setText("aaaaaaaasddddddddddddddddddddddddddddddddddd");
        Cmo.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));

        getContentPane().add(Cmo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));

        Credits.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout CreditsLayout = new javax.swing.GroupLayout(Credits);
        Credits.setLayout(CreditsLayout);
        CreditsLayout.setHorizontalGroup(
            CreditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
        );
        CreditsLayout.setVerticalGroup(
            CreditsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
        );

        getContentPane().add(Credits, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 750));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //region Menu
    private void tutorialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tutorialMouseClicked
        Tutorial1.setVisible(true);
        Tutorial1.setEnabled(true);
        
        Menu.setVisible(false);
        Menu.setEnabled(false);
        
        
    }//GEN-LAST:event_tutorialMouseClicked

    private void foundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foundMouseClicked
      
        Menu.setVisible(false);
        Menu.setEnabled(false);
        
      
        Show.setVisible(true);
        Show.setEnabled(true);
       
       
    }//GEN-LAST:event_foundMouseClicked

    private void try_algorithmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_try_algorithmMouseClicked

        Menu.setVisible(false);
        Menu.setEnabled(false);
        
        Try_Algorithm.setVisible(true);
        Try_Algorithm.setEnabled(true);
        
    }//GEN-LAST:event_try_algorithmMouseClicked

    private void creditsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_creditsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_creditsMouseClicked
    //endregion
    
    
    
    private void NextTutorialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NextTutorialMouseClicked
        
        Tutorial2.setVisible(true);
        Tutorial2.setEnabled(true);
        
        
        Tutorial1.setVisible(false);
        Tutorial1.setEnabled(false);
        player.play();
        
        
       
    }//GEN-LAST:event_NextTutorialMouseClicked

    private void BackToMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToMenuMouseClicked
        
        Menu.setVisible(true);
        Menu.setEnabled(true);
        
        
        Tutorial1.setVisible(false);
        Tutorial1.setEnabled(false);
        
   
        Tutorial2.setVisible(false);
        Tutorial2.setEnabled(false);
        
        
        Try_Algorithm.setVisible(false);
        Try_Algorithm.setEnabled(false);
        
        Show.setVisible(false);
        Show.setEnabled(false);
        
        Hybrid.setVisible(false);
        Hybrid.setVisible(false);
        
        Cmo.setVisible(false);
        Cmo.setVisible(false);
    }//GEN-LAST:event_BackToMenuMouseClicked
    
    private void ComputeAlgorithmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComputeAlgorithmMouseClicked
        /*GeneticAlgorithm algorithm = new GeneticAlgorithm(100,1);
        int n = Integer.parseInt(((String) Objects.requireNonNull(NAlgorithm.getSelectedItem())).trim());
        int d = Integer.parseInt(((String) Objects.requireNonNull(DAlgorithm.getSelectedItem())).trim());
        System.out.println(d);
        Network network = algorithm.getSortedNetwork(n,d);
        createImageFromNetwork(network);
        */
    }//GEN-LAST:event_ComputeAlgorithmMouseClicked
/*
    private void createImageFromNetwork(Network network) {
        System.out.println(network.visualize());
    }
    */
    private void BackToMenuFromAlgorithmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToMenuFromAlgorithmMouseClicked
        Menu.setVisible(true);
        Menu.setEnabled(true);
        
        Try_Algorithm.setVisible(false);
        Try_Algorithm.setEnabled(false);
       
        
    }//GEN-LAST:event_BackToMenuFromAlgorithmMouseClicked

    private void ComputeShowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComputeShowMouseClicked
        int n = (int)showN.getValue();
        BufferedImage myPicture = null;
        try {
            myPicture = ImageIO.read(new File(getClass().getResource("/networks/"+n+".jpg").toURI()));
        } catch (IOException | URISyntaxException e) {
            e.printStackTrace();
        }
        assert myPicture != null;
        myPicture = resize(myPicture,ShowPanel.getWidth(),ShowPanel.getHeight());
        ShowPanel.getGraphics().drawImage(myPicture,0,0,ShowPanel);
    }//GEN-LAST:event_ComputeShowMouseClicked
    public static BufferedImage resize(BufferedImage img, int newW, int newH) {
        Image tmp = img.getScaledInstance(newW, newH, Image.SCALE_SMOOTH);
        BufferedImage dimg = new BufferedImage(newW, newH, BufferedImage.TYPE_INT_ARGB);

        Graphics2D g2d = dimg.createGraphics();
        g2d.drawImage(tmp, 0, 0, null);
        g2d.dispose();

        return dimg;
    }
    private void BackToMenuFromShowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToMenuFromShowMouseClicked
        Menu.setVisible(true);
        Menu.setEnabled(true);
        
        
        Show.setVisible(false);
        Show.setEnabled(false);
 
    }//GEN-LAST:event_BackToMenuFromShowMouseClicked

    private void BackToTutorialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToTutorialMouseClicked
        Tutorial1.setVisible(true);
        Tutorial1.setEnabled(true);

        Tutorial2.setVisible(false);
        Tutorial2.setEnabled(false);


        player.stop();

    }//GEN-LAST:event_BackToTutorialMouseClicked

    private void to_hibridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_to_hibridMouseClicked
        Try_Algorithm.setVisible(false);
        Try_Algorithm.setEnabled(false);
        
        Hybrid.setVisible(true);
        Hybrid.setVisible(true);
        
    }//GEN-LAST:event_to_hibridMouseClicked

    private void to_cmoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_to_cmoMouseClicked
        Try_Algorithm.setVisible(false);
        Try_Algorithm.setEnabled(false);
        
        Cmo.setVisible(true);
        Cmo.setVisible(true);
    }//GEN-LAST:event_to_cmoMouseClicked

    private void BackToSelectFromHibridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToSelectFromHibridMouseClicked
        Try_Algorithm.setVisible(true);
        Try_Algorithm.setEnabled(true);
        
        Hybrid.setVisible(false);
        Hybrid.setVisible(false);

        if(hybridThread!=null){
            hybridThread.stop();
        }
        if(chartThread!=null){
            chartThread.stop();
        }
        textHibrid.setText("");
    }//GEN-LAST:event_BackToSelectFromHibridMouseClicked

    private void BackToSelectFromCmoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToSelectFromCmoMouseClicked
         Try_Algorithm.setVisible(true);
        Try_Algorithm.setEnabled(true);
        
        Cmo.setVisible(false);
        Cmo.setVisible(false);

        if(cmoThread!=null){
            cmoThread.stop();
        }
        if(chartThread!=null){
            chartThread.stop();
        }
        textCmo.setText("");
    }//GEN-LAST:event_BackToSelectFromCmoMouseClicked

    private void computeCMOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computeCMOMouseClicked
        int wires = (int) wiresCMO.getValue();
        int depth = (int) depthCMO.getValue();

        int generations = (int) generationsCMO.getValue();
        int population = (int) populationCMO.getValue();
        
        double crossoverProp = fromPercentageString((String)crossoverProportionCMO.getValue());
        double crossoverRate = (double) crossoverRateCMO.getValue();
        double mutationRate = (double) mutationCMO.getValue();

        CompositeGeneticAlgorithm algorithm = new CompositeGeneticAlgorithm(1,generations,population,
                crossoverRate,crossoverProp,mutationRate);

        MessageConsole messageConsole = new MessageConsole(textCmo);
        messageConsole.redirectOut();


        RealTimeChartCmo swingWorkerRealTime = new RealTimeChartCmo();
        chartThread = new Thread(swingWorkerRealTime);
        chartThread.start();

        NetworkRunnable networkRunnable= new NetworkRunnable(algorithm,null,
                swingWorkerRealTime.getSwingWorkerCmo(), null,wires,depth);
        cmoThread=new Thread(networkRunnable);
        cmoThread.start();
    }//GEN-LAST:event_computeCMOMouseClicked

    private void helperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helperActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_helperActionPerformed

    private void computeHybridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_computeHybridMouseClicked
        textHibrid.setText("");
        int wires = (int) fireHybrid.getValue();
        int depth = (int) depthHybrid.getValue();

        int generations = (int) generationsHybrid.getValue();
        int population = (int) populationHybrid.getValue();
        
        ICrossover crossover = null;
        if(crossoverHybrid.getValue().equals("Multi-Point")){
            crossover = new MultiPointCrossover();
        }
        else{
            crossover= new SinglePointCrossover();
        }

        double mutationRate = (double) mutationHybrid.getValue();
        IMutation mutation = null;
        if(mutationType.getValue().equals("Indirect Replacement")){
            mutation = new IndirectReplacementMutation(mutationRate);
        }
        else{
            mutation = new SimpleMutation(mutationRate);
        }
        IEditor usedEditor = null;
        if(editorType.getValue().equals("Redundancy")){
            usedEditor = new RedundancyEditor();
        }
        else{
            usedEditor = new CorrectWireEditor();
        }
        Helper usedHelper = null;
        if(helper.isSelected()){
            usedHelper = new Helper(1000);
        }
        
        HybridGeneticAlgorithm algorithm = new HybridGeneticAlgorithm(population,1,generations,crossover,usedEditor,mutation,usedHelper,false);

        MessageConsole messageConsole = new MessageConsole(textHibrid);
        messageConsole.redirectOut();


        RealTimeChartHybrid swingWorkerRealTime = new RealTimeChartHybrid();
        chartThread = new Thread(swingWorkerRealTime);
        chartThread.start();

        NetworkRunnable networkRunnable= new NetworkRunnable(null,algorithm,null,
                swingWorkerRealTime.getSwingWorkerHybrid(),wires,depth);
        hybridThread=new Thread(networkRunnable);
        hybridThread.start();


    }//GEN-LAST:event_computeHybridMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    private Thread hybridThread;
    private Thread cmoThread;
    private Thread chartThread;
    private JFXPanel VFXPanel = new JFXPanel();
    private MediaPlayer player; 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BackToMenu;
    private javax.swing.JLabel BackToMenuFromAlgorithm;
    private javax.swing.JLabel BackToMenuFromShow;
    private javax.swing.JLabel BackToSelectFromCmo;
    private javax.swing.JLabel BackToSelectFromHibrid;
    private javax.swing.JLabel BackToTutorial;
    private javax.swing.JPanel Cmo;
    private javax.swing.JLabel ComputeAlgorithm;
    private javax.swing.JLabel ComputeShow;
    private javax.swing.JPanel Credits;
    private javax.swing.JPanel Hybrid;
    private javax.swing.JPanel Menu;
    private javax.swing.JLabel NextTutorial;
    private javax.swing.JPanel Show;
    private javax.swing.JPanel ShowPanel;
    private javax.swing.JPanel Try_Algorithm;
    private javax.swing.JPanel Tutorial1;
    private javax.swing.JPanel Tutorial2;
    private javax.swing.JPanel VideoPlayer;
    private javax.swing.JLabel computeCMO;
    private javax.swing.JLabel computeHybrid;
    private javax.swing.JLabel credits;
    private javax.swing.JSpinner crossoverHybrid;
    private javax.swing.JSpinner crossoverProportionCMO;
    private javax.swing.JSpinner crossoverRateCMO;
    private javax.swing.JSpinner depthCMO;
    private javax.swing.JSpinner depthHybrid;
    private javax.swing.JSpinner editorType;
    private javax.swing.JSpinner fireHybrid;
    private javax.swing.JLabel found;
    private javax.swing.JSpinner generationsCMO;
    private javax.swing.JSpinner generationsHybrid;
    private javax.swing.JRadioButton helper;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner mutationCMO;
    private javax.swing.JSpinner mutationHybrid;
    private javax.swing.JSpinner mutationType;
    private javax.swing.JSpinner populationCMO;
    private javax.swing.JSpinner populationHybrid;
    private javax.swing.JSpinner showN;
    private javax.swing.JTextArea textCmo;
    private javax.swing.JTextArea textHibrid;
    private javax.swing.JLabel to_cmo;
    private javax.swing.JLabel to_hibrid;
    private javax.swing.JLabel try_algorithm;
    private javax.swing.JLabel tutorial;
    private javax.swing.JSpinner wiresCMO;
    // End of variables declaration//GEN-END:variables

   
}
